python_binary(
    name = "run",
    srcs = ["run.py"],
    main_module = "experimental.germank.ai-challenge.src.run",
    py_version = "<3",
    deps = [
        ":aic",
    ],
)

python_binary(
    name = "train",
    srcs = [
        "experimental/baselines/exp.py",
        "experimental/baselines/train.py",
        "experimental/baselines/util.py",
    ],
    main_module = "experimental.germank.ai-challenge.src.experimental.baselines.train",
    py_version = "<3",
    deps = [
        ":aic",
        "@/pytorch/pytorch:torch",
        "@/visdom/py:visdom",
    ],
)

python_library(
    name = "aic",
    srcs = glob(
        ["**/*.py"],
        excludes = ["run_tournament.py"],
    ),
    base_module = "",
    deps = [
        "@/pytorch/pytorch:torch",
    ],
    external_deps = [
        ("pyzmq", "any"),
        ("numpy", "any"),
        ("memory_profiler", "any"),
        ("psutil", None),
    ],
)

python_binary(
    name = "test_remote_learner",
    srcs = util.files("core/tests/test_remote_learner.py"),
    main_module =
        "experimental.germank.ai-challenge.src.core.tests.test_remote_learner",
    py_version = "<3",
    external_deps = [
        ("pyzmq", "any"),
    ],
)

cpp_binary(
    name = "test_cpp_learner",
    srcs = [
        "core/tests/test_cpp_learner.cc",
    ],
    external_deps = [
        "zeromq",
    ],
)

lua_binary(
    name = "test_torch_learner",
    srcs = [
        "core/tests/test_torch_learner.lua",
    ],
    main_module = "core.tests.test_torch_learner",
    deps = [
        "@/deeplearning/torch:all_modules",
    ],
)
